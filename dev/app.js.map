{"version":3,"file":"app.js","sources":["webpack://[name]/webpack/universalModuleDefinition","webpack://[name]/./src/coin/Coin.js","webpack://[name]/./src/enemy/ShyGuy/ShyGuy.js","webpack://[name]/./src/main.js","webpack://[name]/./src/player/Player.js","webpack://[name]/./src/powerup/mushroom/Mushroom.js","webpack://[name]/./src/scenes/Boot/Boot.js","webpack://[name]/./src/scenes/Level1/Level1.js","webpack://[name]/./src/scenes/Pause/Pause.js","webpack://[name]/./src/scenes/Start/Start.js","webpack://[name]/webpack/bootstrap","webpack://[name]/webpack/runtime/define property getters","webpack://[name]/webpack/runtime/hasOwnProperty shorthand","webpack://[name]/webpack/runtime/make namespace object","webpack://[name]/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"app\"] = factory();\n\telse\n\t\troot[\"app\"] = factory();\n})(self, function() {\nreturn ","export default class Class extends Phaser.Physics.Arcade.Sprite {\n  constructor(scene, x, y) {\n    super(scene, x + 16, y - 16);\n    this.scene = scene;\n    this.scene.add.existing(this);\n    this.scene.physics.add.existing(this);\n    this.body.allowGravity = false;\n    this.anims.create({\n      key: 'idle',\n      frames: this.scene.anims.generateFrameNames('coinSprites', {\n        start: 1,\n        end: 4,\n        prefix: 'idle-'\n      }),\n      frameRate: 10,\n      repeat: -1\n    });\n    this.play('idle', true);\n  }\n\n  OnHit() {\n    this.scene.increaseScore();\n    this.scene.destroyObject(this);\n  }\n\n}","export default class ShyGuy extends Phaser.Physics.Arcade.Sprite {\n  constructor(scene, x, y) {\n    super(scene, x + 16, y - 16);\n    this.scene = scene;\n    this.movementRange = 200;\n    this.scene.add.existing(this);\n    this.scene.physics.add.existing(this);\n    this.body.allowGravity = false;\n    this.anims.create({\n      key: 'idle',\n      frames: this.scene.anims.generateFrameNames('shyGuySprites', {\n        start: 1,\n        end: 4,\n        prefix: 'idle-'\n      }),\n      frameRate: 10,\n      repeat: -1\n    });\n    this.play('idle', true);\n    this.direction = 1; // Sentido en el que va el enemigo. 1 = Arriba, -1 = Abajo\n\n    this.a = this.y;\n    this.b = this.y + this.movementRange;\n  }\n\n  update(time, delta) {\n    if (this.direction === 1 && this.y > this.b || this.direction === -1 && this.y < this.a) {\n      this.direction *= -1;\n    }\n\n    this.setVelocityY(this.direction * 2 * delta);\n  }\n\n  OnHit() {\n    if (this.body.touching.up) {\n      this.scene.player.jump(this.scene.delta);\n      this.scene.increaseScore();\n      this.scene.destroyObject(this);\n    } else {\n      this.scene.onPlayerDied();\n    }\n  }\n\n}","import Boot from './scenes/Boot/Boot';\nimport Start from './scenes/Start/Start';\nimport Level1 from './scenes/Level1/Level1';\nimport Pause from './scenes/Pause/Pause';\nconst config = {\n  type: Phaser.AUTO,\n  width: 800,\n  height: 480,\n  pixelArt: true,\n  parent: 'canvas',\n  mode: Phaser.Scale.FIT,\n  autoCenter: Phaser.Scale.CENTER_BOTH,\n  physics: {\n    default: 'arcade',\n    arcade: {\n      gravity: {\n        y: 300\n      },\n      debug: true\n    }\n  },\n  scene: [Boot, Start, Level1, Pause]\n}; // eslint-disable-next-line no-new\n\nnew Phaser.Game(config);","export default class Player extends Phaser.Physics.Arcade.Sprite {\n  constructor(scene, x, y) {\n    super(scene, x, y, 'player');\n    this.scene = scene;\n    this.jumpSound = this.scene.sound.add('jump');\n    this.isJumping = false;\n    this.isJumpingUp = false;\n    this.isJumpingDown = false;\n    this.isDoubleJumping = false;\n    this.doubleJumpingAllowed = false;\n    this.doubleJumpTime = 0.9; // Segundos que se puede mantener el doble salto\n\n    this.doubleJumpingAutoTime = 0.6; // Segundos para realizar el doble salto si se mantiene el espacio al saltar\n\n    this.doubleJumpingTimeout = null;\n    this.scene.add.existing(this);\n    this.scene.physics.add.existing(this);\n    this.cursor = this.scene.input.keyboard.createCursorKeys();\n    this.body.setSize(this.width * 0.3, this.height * 0.75);\n    this.body.setOffset((this.width - this.body.width) * 0.5, this.height * 0.25);\n    this.scene.physics.add.collider(this, this.scene.layer);\n    this.scene.physics.add.collider(this, this.scene.seaLayer, this.die, null, this);\n    this.scene.physics.add.collider(this, this.scene.goalLayer, this.win, null, this);\n    this.anims.create({\n      key: 'walk',\n      frames: this.scene.anims.generateFrameNames('playerSprites', {\n        start: 1,\n        end: 10,\n        prefix: 'walk-'\n      }),\n      frameRate: 10,\n      repeat: -1\n    });\n    this.anims.create({\n      key: 'idle',\n      frames: this.scene.anims.generateFrameNames('playerSprites', {\n        start: 1,\n        end: 3,\n        prefix: 'idle-'\n      }),\n      frameRate: 2,\n      repeat: -1\n    });\n    this.anims.create({\n      key: 'jump-up',\n      frames: this.scene.anims.generateFrameNames('playerSprites', {\n        start: 1,\n        end: 2,\n        prefix: 'jump-'\n      }),\n      frameRate: 2,\n      repeat: 1\n    });\n    this.anims.create({\n      key: 'jump-down',\n      frames: this.scene.anims.generateFrameNames('playerSprites', {\n        start: 3,\n        end: 3,\n        prefix: 'jump-'\n      }),\n      frameRate: 2,\n      repeat: 1\n    });\n    this.anims.create({\n      key: 'double-jump',\n      frames: this.scene.anims.generateFrameNames('playerSprites', {\n        start: 1,\n        end: 3,\n        prefix: 'double-jump-'\n      }),\n      frameRate: 20,\n      repeat: -1\n    });\n  }\n\n  update(time, delta) {\n    if (this.cursor.left.isDown) {\n      this.setVelocityX(-10 * delta);\n      this.setFlipX(true);\n    } else if (this.cursor.right.isDown) {\n      this.setVelocityX(10 * delta);\n      this.setFlipX(false);\n    } else {\n      this.setVelocityX(0);\n    }\n\n    if (this.body.onFloor()) {\n      this.isJumping = false;\n      this.isJumpingUp = false;\n      this.isJumpingDown = false;\n\n      if (this.doubleJumpingTimeout) {\n        clearTimeout(this.doubleJumpingTimeout);\n        this.doubleJumpStopped();\n      }\n    }\n\n    if (this.cursor.space.isDown && this.body.onFloor()) {\n      this.isJumping = true;\n      this.jump(delta);\n      setTimeout(() => {\n        this.doubleJumpingAllowed = true;\n      }, this.doubleJumpingAutoTime * 1000);\n    }\n\n    if (this.isJumping) {\n      this.handleJump();\n    } else if (this.body.velocity.x !== 0) {\n      this.play('walk', true);\n    } else {\n      this.play('idle', true);\n    }\n  }\n\n  jump(delta) {\n    this.setVelocityY(-15 * delta);\n    this.jumpSound.play();\n  }\n\n  handleJump() {\n    // Si se suelta el bot칩n de salto mientras se est치 realizando doble salto, este termina\n    if (this.isDoubleJumping && !this.cursor.space.isDown) {\n      this.setAcceleration(0); // Si se ha quedado el timeout sin terminar lo paramos\n\n      if (this.doubleJumpingTimeout) {\n        clearTimeout(this.doubleJumpingTimeout);\n      } // Paramos el doble salto\n\n\n      this.doubleJumpStopped();\n    }\n\n    if (this.doubleJumpingAllowed && this.cursor.space.isDown) {\n      // Si podemos hacer doble salto y se est치 apretando la tecla de salto\n      //    aplicamos la fuerza del doble salto\n      this.handleDoubleJump();\n    } else if (!this.isJumpingUp && this.body.velocity.y < 0) {\n      this.jumpUp();\n    } else if (!this.isJumpingDown && this.body.velocity.y > 0) {\n      this.jumpDown();\n    }\n  }\n\n  handleDoubleJump() {\n    if (this.isDoubleJumping) {\n      // Aplicamos fuerza\n      this.scene.physics.accelerateTo(this, this.body.position.x, this.body.position.y, 400, 200, 200);\n    } else {\n      // Hacemos animaci칩n si es la primera vez\n      this.play('double-jump', true);\n      this.isDoubleJumping = true;\n      this.isJumpingUp = false;\n      this.isJumpingDown = false;\n\n      if (this.doubleJumpingTimeout) {\n        clearTimeout(this.doubleJumpingTimeout);\n      } // Ponemos countdown para deshabilitar el doble salto\n\n\n      this.doubleJumpingTimeout = setTimeout(() => {\n        this.doubleJumpStopped();\n      }, this.doubleJumpTime * 1000); // No se debe poner delta, es tiempo de JS\n    }\n  }\n\n  doubleJumpStopped() {\n    this.doubleJumpingAllowed = false;\n    this.isDoubleJumping = false;\n    this.setAcceleration(0);\n  }\n\n  jumpUp() {\n    if (this.isJumpingDown) {\n      // Si mientras salta vuelve a ir hacia arriba (pisar enemigo por ejemplo), habilitamos doble salto de nuevo\n      this.doubleJumpingAllowed = true;\n    }\n\n    this.play('jump-up', true);\n    this.isJumpingUp = true;\n    this.isJumpingDown = false;\n  }\n\n  jumpDown() {\n    this.play('jump-down', true);\n    this.isJumpingDown = true;\n    this.isJumpingUp = false;\n  }\n\n  die() {\n    // llamar al PlayerDied de la escena\n    this.scene.onPlayerDied();\n  }\n\n  win() {\n    this.scene.onPlayerWin();\n  }\n\n}","export default class Mushroom extends Phaser.Physics.Arcade.Sprite {\n  constructor(scene, x, y) {\n    super(scene, x + 16, y - 16, 'tilesSprites', 114);\n    this.scene = scene;\n    this.scene.add.existing(this);\n    this.scene.physics.add.existing(this);\n    this.body.allowGravity = false;\n  }\n\n  OnHit() {\n    this.scene.powerupSound.play();\n    this.scene.destroyObject(this);\n  }\n\n}","export default class Boot extends Phaser.Scene {\n  constructor() {\n    super({\n      key: 'Boot'\n    });\n    this.canPLay = false;\n  }\n\n  preload() {\n    const progress = this.add.graphics();\n    this.load.on('progress', value => {\n      progress.clear();\n      progress.fillStyle(0xffffff, 1);\n      progress.fillRect(0, this.sys.game.config.height / 2, this.sys.game.config.width * value, 60);\n    });\n    this.load.on('complete', () => {\n      progress.destroy();\n      this.add.bitmapText(16 * 8 + 4, 8 * 16, 'font', 'PRESS X TO POWER ON', 8);\n      this.canPLay = true;\n    });\n    this.input.on('pointerdown', () => {\n      if (this.canPLay) {\n        this.sound.add('bootMusic').play();\n        setTimeout(() => {\n          this.scene.start('Start');\n        }, 1000);\n      }\n    }); // LOAD\n\n    this.load.audio('bootMusic', 'src/scenes/Boot/music.mp3');\n    this.load.audio('startMusic', 'src/scenes/Start/music.mp3');\n    this.load.audio('playMusic', 'src/scenes/Start/play.mp3');\n    this.load.audio('level1Music', 'src/scenes/Level1/music.mp3');\n    this.load.audio('gameoverMusic', 'src/scenes/Start/gameover.mp3');\n    this.load.audio('winMusic', 'src/scenes/Start/win.mp3');\n    this.load.audio('jump', 'src/player/jump.mp3');\n    this.load.audio('powerup', 'src/powerup/powerup.wav');\n    this.load.audio('coin', 'src/coin/coin.wav');\n    this.load.image('startBackground', 'src/scenes/Start/background.jpg');\n    this.load.image('tiles', 'src/scenes/Level1/background/tileset.png');\n    this.load.spritesheet('tilesSprites', 'src/scenes/Level1/background/tileset.png', {\n      frameWidth: 32,\n      frameHeight: 32\n    });\n    this.load.tilemapTiledJSON('map', 'src/scenes/Level1/background/config.json');\n    this.load.image('level1Background', 'src/scenes/Level1/background/sky.png');\n    this.load.bitmapFont('font', 'src/scenes/font.png', 'src/scenes/font.fnt');\n    this.load.image('player', 'src/player/animation/main.png');\n    this.load.atlas('playerSprites', 'src/player/animation/spritesheet.png', 'src/player/animation/config.json');\n    this.load.atlas('coinSprites', 'src/coin/animation/spritesheet.png', 'src/coin/animation/config.json');\n    this.load.atlas('shyGuySprites', 'src/enemy/ShyGuy/spritesheet.png', 'src/enemy/ShyGuy/config.json');\n  }\n\n}","import Player from '../../player/Player';\nimport Mushroom from '../../powerup/mushroom/Mushroom';\nimport Coin from '../../coin/Coin';\nimport ShyGuy from '../../enemy/ShyGuy/ShyGuy';\nexport default class Level1 extends Phaser.Scene {\n  constructor() {\n    super({\n      key: 'Level1'\n    });\n    this.updateObjects = []; // Objetos que tienen un update()\n\n    this.delta = 0;\n  }\n\n  preload() {\n    // this.load.scenePlugin({\n    //     key: 'animatedTiles',\n    //     url: 'node_modules/phaser-animated-tiles/dist/AnimatedTiles.min',\n    // });\n    this.music = this.sound.add('level1Music', {\n      loop: true\n    });\n    this.powerupSound = this.sound.add('powerup');\n    this.coinSound = this.sound.add('coin');\n  }\n\n  create() {\n    this.music.play();\n    this.loadBackground();\n    this.loadMap();\n    this.player = new Player(this, 50, 100);\n    this.updateObjects.push(this.player);\n    this.loadPhysics();\n    this.loadUI();\n    this.loadItem('Coin', Coin);\n    this.loadItem('PowerUp', Mushroom);\n    this.loadItem('ShyGuy', ShyGuy);\n  }\n\n  update(time, delta) {\n    this.delta = delta; // Al rev칠s para poder borrar elementos\n\n    for (let i = this.updateObjects.length - 1; i >= 0; i--) {\n      try {\n        this.updateObjects[i].update(time, delta);\n      } catch (e) {\n        this.updateObjects.splice(i, 1);\n      }\n    }\n\n    if (this.pauseKey.isDown) {\n      this.pauseGame();\n    }\n  } ///\n\n\n  loadBackground() {\n    this.add.tileSprite(0, 0, this.cameras.main.width * 2, this.cameras.main.height * 2, 'level1Background').setScrollFactor(0);\n  }\n\n  loadMap() {\n    this.map = this.make.tilemap({\n      key: 'map'\n    });\n    this.map.createLayer('Background', this.map.addTilesetImage('Plataformas', 'tiles'), 0, 0);\n    this.layer = this.map.createLayer('Floor', this.map.addTilesetImage('Plataformas', 'tiles'), 0, 0); // Habilitar colisi칩n para Floor\n\n    this.layer.setCollisionByExclusion(-1, true); // capa para detectar el mar\n\n    this.seaLayer = this.map.createLayer('Sea', this.map.addTilesetImage('Plataformas', 'tiles'), 0, 0); // Habilitar colisi칩n para Sea\n\n    this.seaLayer.setCollisionByExclusion(-1, true);\n    this.seaLayer.setVisible(false); // capa para detectar la meta(Goal)\n\n    this.goalLayer = this.map.createLayer('Goal', this.map.addTilesetImage('Plataformas', 'tiles'), 0, 0); // Habilitar colisi칩n para Goal\n\n    this.goalLayer.setCollisionByExclusion(-1, true);\n    this.goalLayer.setVisible(false);\n  }\n\n  loadPhysics() {\n    this.cameras.main.setBounds(0, 0, this.map.widthInPixels, this.map.heightInPixels - 1);\n    this.cameras.main.startFollow(this.player, false, 1, 0, 0, -500);\n  }\n\n  loadUI() {\n    // Fondo negro de la parte superior\n    this.add.graphics().fillStyle(0x000000).fillRect(0, 0, this.sys.game.config.width, 16).setScrollFactor(0); // Puntuaci칩n\n\n    this.score = 0;\n    this.scoreText = this.add.bitmapText(8, 8, 'font', `SCORE: ${this.score}`);\n    this.scoreText.setScrollFactor(0); // Pause text\n\n    this.pauseText = this.add.bitmapText(660, 8, 'font', 'PRESS ESC to PAUSE');\n    this.pauseText.setScrollFactor(0);\n    this.pauseKey = this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.ESC);\n  }\n\n  loadItem(layer, Class) {\n    this.map.getObjectLayer(layer).objects.forEach(item => {\n      const instance = new Class(this, item.x, item.y);\n      this.updateObjects.push(instance);\n      this.physics.add.overlap(instance, this.player, instance.OnHit, null, instance);\n    });\n  }\n\n  increaseScore() {\n    this.score++;\n    this.updateScore();\n    this.coinSound.play();\n  }\n\n  updateScore() {\n    this.scoreText.setText(`SCORE: ${this.score}`);\n  }\n\n  destroyObject(object) {\n    for (let i = 0; i < this.updateObjects.length; i++) {\n      if (this.updateObjects[i] === object) {\n        this.updateObjects.splice(i, 1);\n      }\n    }\n\n    object.destroy();\n  }\n\n  onPlayerDied() {\n    this.music.stop();\n    this.scene.start('Start', {\n      gameover: true\n    });\n  }\n\n  onPlayerWin() {\n    this.music.stop();\n    this.scene.start('Start', {\n      win: true\n    });\n  }\n\n  pauseGame() {\n    this.scene.pause();\n    this.scene.launch('Pause');\n  }\n\n}","export default class Pause extends Phaser.Scene {\n  constructor() {\n    super({\n      key: 'Pause'\n    });\n  }\n\n  preload() {}\n\n  create() {\n    this.add.image(0, 0, 'startBackground').setOrigin(0, 0);\n    this.add.graphics().fillStyle(0x000000, 0.5).fillRect(0, this.sys.game.config.height / 2 - 20, this.sys.game.config.width, 50);\n    this.pressX = this.add.bitmapText(this.sys.game.config.width / 2 - 140, this.sys.game.config.height / 2, 'font', 'PAUSED - PRESS ESC TO RESUME', 10);\n    this.resumeKey = this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.ESC);\n  }\n\n  update() {\n    if (this.resumeKey.isDown) {\n      this.resumeGame();\n    }\n  }\n\n  resumeGame() {\n    this.scene.resume('Level1');\n    this.scene.stop('Pause');\n  }\n\n}","export default class Start extends Phaser.Scene {\n  constructor() {\n    super({\n      key: 'Start'\n    });\n  }\n\n  init(data) {\n    this.DEVELOPMENT = true;\n    this.gameover = data.gameover;\n    this.win = data.win;\n  }\n\n  preload() {\n    this.music = this.sound.add(`${this.gameover ? 'gameover' : this.win ? 'win' : 'start'}Music`);\n    this.playMusic = this.sound.add('playMusic');\n  }\n\n  create() {\n    if (this.DEVELOPMENT) {\n      this.startGame();\n    } else {\n      this.add.image(0, 0, 'startBackground').setOrigin(0, 0);\n      this.music.play();\n      this.add.graphics().fillStyle(0x000000, 0.5).fillRect(0, this.sys.game.config.height / 2 - 20, this.sys.game.config.width, 50);\n      let width = 75;\n      let text = 'PRESS X TO PLAY';\n\n      if (this.gameover) {\n        width = 140;\n        text = 'GAME OVER - PRESS X TO TRY AGAIN!';\n      } else if (this.win) {\n        width = 130;\n        text = 'YOU WIN - PRESS X TO REPLAY!';\n      }\n\n      this.pressX = this.add.bitmapText(this.sys.game.config.width / 2 - width, this.sys.game.config.height / 2, 'font', text, 10);\n      this.startKey = this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.X);\n      this.input.on('pointerdown', () => {\n        this.startGame();\n      });\n    }\n  }\n\n  update() {\n    if (this.startKey.isDown) {\n      this.startGame();\n    }\n  }\n\n  startGame() {\n    if (this.DEVELOPMENT) {\n      this.scene.start('Level1');\n    } else {\n      this.music.stop();\n      this.playMusic.play();\n      setTimeout(() => this.scene.start('Level1'), 2000);\n    }\n  }\n\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(\"./src/main.js\");\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;;;;;;;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;;;;;;;ACztMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;;;;;;;;;;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;;;;;;;AClJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACNA;AACA;AACA;AACA;;;A","sourceRoot":""}